---
version: "3"

services:
  db:
    image: postgres:15.0
    container_name: pg-database
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=${PG_ADMIN_PWD}
      - POSTGRES_DB=${PG_APP_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d ${PG_APP_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - bess

  bess-go:
    build:
      context: .
      target: ${TARGET:-dev}
    container_name: bess-go
    environment:
      - BESS_VAULT_SERVICE_TOKEN=${BESS_VAULT_SERVICE_TOKEN}
      - BESS_VAULT_HOST=vault-dev
      - BESS_VAULT_PORT=8200
      - DB_HOST=db
      - DB_PORT=5432
    ports:
      - "8080:8080"
    links:
      - db
      - vault-dev
    depends_on:
      db:
        condition: service_healthy
      vault-dev:
        condition: service_healthy
    networks:
      - bess

  vault-dev:
    image: vault:1.12.1
    container_name: vault-dev
    volumes:
      - vault-data:/vault
      - ./policies:/vault-policies:ro
      - ./ssl:/ssl:rw
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200/
      - VAULT_DEV_ROOT_TOKEN_ID=${VAULT_ROOT_TOKEN}
      - VAULT_API_ADDR=http://vault-dev:8200/
      - VAULT_TOKEN=${VAULT_ROOT_TOKEN}
      - VAULT_LOG_LEVEL=${VAULT_LOG_LEVEL}
      - 'VAULT_LOCAL_CONFIG={"storage": {"file": {"path": "/vault"}}, "default_lease_ttl": "168h", "max_lease_ttl": "720h", "ui": true}'
    cap_add:
      - IPC_LOCK
    ports:
      - "8200:8200"
    links:
      - db
    healthcheck:
      test: ["CMD", "wget", "--spider", "--proxy", "off", "http://localhost:8200/v1/sys/health?standbyok=true"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bess

volumes:
  pg-data:
  data:
  vault-data:

networks:
  bess:
